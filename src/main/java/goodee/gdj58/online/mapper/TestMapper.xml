<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.online.mapper.TestMapper">
	
	<!-- 학생이 응시한 시험 수 -->
	<select id="selectTestCountByStudent" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT t.test_no testNo
			,COUNT(*) over(PARTITION BY t.test_no) as count
		FROM question q
		INNER JOIN paper p
		ON p.question_no = q.question_no
		INNER JOIN test t
		ON t.test_no = q.test_no
		WHERE p.student_no = ${studentNo}
		GROUP BY t.test_no
	</select>
	
	<!-- 학생이 응시한 시험 출력 -->
	<select id="selectTestListByStudent" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT t.test_no testNo
			, t.test_title testTitle
			, t.test_date testDate
			, t.teacher_id teacherId
		FROM question q
		INNER JOIN paper p
		ON p.question_no = q.question_no
		INNER JOIN test t
		ON t.test_no = q.test_no
		WHERE p.student_no = ${studentNo}
		GROUP BY t.test_no
		ORDER BY test_date DESC
		LIMIT #{beginRow}, #{rowPerPage};
	</select>
	
	<!-- 시험 삭제 -->
	<delete id="deleteTest" parameterType="Integer">
		DELETE FROM test
		WHERE test_no = #{testNo}
	</delete>

	<!-- 시험 상세보기 -->
	<select id="selectTestOne" resultType="goodee.gdj58.online.vo.Test" parameterType="Integer">
		SELECT test_no testNo
			, test_title testTitle
			, test_date testDate
		FROM test
		WHERE test_no = #{testNo}
	</select>
	
	<!-- 수정 -->
	<update id="updateTest" parameterType="goodee.gdj58.online.vo.Test">
		UPDATE test
		SET test_title = #{testTitle}
		WHERE test_no = #{testNo}
	</update>
	
	<!-- 시험 추가 -->
	<insert id="insertTest" parameterType="goodee.gdj58.online.vo.Test">
		INSERT INTO test(
			test_title 
			, test_date
			, teacher_id 
		) VALUES(
			#{testTitle}
			, #{testDate}
			, #{teacherId}
		);
	</insert>
	
	<!-- 지난 시험 개수 -->
	<select id="selectPastTestCount" resultType="Integer" parameterType="java.util.Map">
		SELECT COUNT(*)
		FROM test
		<where>
			<if test="searchWord != null and searchWord != '' ">
				test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="todayDate != null and todayDate != '' ">
				AND test_date <![CDATA[<]]> #{todayDate} 
			</if>
		</where>
	</select>
	
	<!-- 예정 시험 개수 -->
	<select id="selectTestCount" resultType="Integer" parameterType="java.util.Map">
		SELECT COUNT(*)
		FROM test
		<where>
			<if test="searchWord != null and searchWord != '' ">
				test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="todayDate != null and todayDate != '' ">
				AND test_date <![CDATA[>]]> #{todayDate} 
			</if>
		</where>
	</select>
	
	<!-- 지난 시험 출력 -->
	<select id="selectPastTestList" resultType="goodee.gdj58.online.vo.Test" parameterType="java.util.Map">
		SELECT test_no testNo
			, test_title testTitle
			, test_date testDate
			, teacher_id teacherId
		FROM test
		<where>
			<if test="teacherId != null and teacherId != '' ">
				AND teacher_id LIKE CONCAT(#{teacherId})
			</if>
			<if test="searchWord != null and searchWord != '' ">
				AND test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="todayDate != null and todayDate != '' ">
				AND test_date <![CDATA[<]]> #{todayDate} 
			</if>
		</where>
		ORDER BY test_date DESC
		LIMIT #{beginRow}, #{rowPerPage};
	</select>
	
	<!-- 예정 시험 출력 -->
	<select id="selectTestList" resultType="goodee.gdj58.online.vo.Test" parameterType="java.util.Map">
		SELECT test_no testNo
			, test_title testTitle
			, test_date testDate
			, teacher_id teacherId
		FROM test
		<where>
			<if test="teacherId != null and teacherId != '' ">
				AND teacher_id LIKE CONCAT(#{teacherId})
			</if>
			<if test="searchWord != null and searchWord != '' ">
				AND test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="todayDate != null and todayDate != '' ">
				AND test_date <![CDATA[>]]> #{todayDate} 
			</if>
		</where>
		ORDER BY test_date DESC
		<if test="currentPage != null and rowPerPage != null">
			LIMIT #{beginRow}, #{rowPerPage};
		</if>
	</select>

</mapper>